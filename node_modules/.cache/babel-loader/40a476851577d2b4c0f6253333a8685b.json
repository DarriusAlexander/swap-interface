{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _UNI,_COMMON_CONTRACT_NAME,_WETH_ONLY,_ChainId$MAINNET;import{ChainId,JSBI,Percent,Token,WETH}from'@uniswap/sdk';import{fortmatic,injected,portis,walletconnect,walletlink}from'../connectors';export var ROUTER_ADDRESS='0x212fd459d3e9df2222452ffd3fd5eba51f6cff0f';export var ZERO_ADDRESS='0x0000000000000000000000000000000000000000';export{PRELOADED_PROPOSALS}from'./proposals';// a list of tokens by chain\nexport var AMPL=new Token(ChainId.MAINNET,'0xD46bA6D942050d489DBd938a2C909A5d5039A161',9,'AMPL','Ampleforth');export var DAI=new Token(ChainId.MAINNET,'0x6B175474E89094C44Da98b954EedeAC495271d0F',18,'DAI','Dai Stablecoin');export var USDC=new Token(ChainId.MAINNET,'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',6,'USDC','USD//C');export var USDT=new Token(ChainId.MAINNET,'0xdAC17F958D2ee523a2206206994597C13D831ec7',6,'USDT','Tether USD');export var WBTC=new Token(ChainId.MAINNET,'0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',8,'WBTC','Wrapped BTC');export var FEI=new Token(ChainId.MAINNET,'0x956F47F50A910163D8BF957Cf5846D573E7f87CA',18,'FEI','Fei USD');export var TRIBE=new Token(ChainId.MAINNET,'0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B',18,'TRIBE','Tribe');export var FRAX=new Token(ChainId.MAINNET,'0x853d955aCEf822Db058eb8505911ED77F175b99e',18,'FRAX','Frax');export var FXS=new Token(ChainId.MAINNET,'0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0',18,'FXS','Frax Share');export var renBTC=new Token(ChainId.MAINNET,'0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',8,'renBTC','renBTC');// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport var AVERAGE_BLOCK_TIME_IN_SECS=13;export var PROPOSAL_LENGTH_IN_BLOCKS=40320;export var PROPOSAL_LENGTH_IN_SECS=AVERAGE_BLOCK_TIME_IN_SECS*PROPOSAL_LENGTH_IN_BLOCKS;export var GOVERNANCE_ADDRESS='0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F';export var TIMELOCK_ADDRESS='0x1a9C8182C09F50C8318d769245beA52c32BE35BC';var UNI_ADDRESS='0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984';export var UNI=(_UNI={},_defineProperty(_UNI,ChainId.MAINNET,new Token(ChainId.MAINNET,UNI_ADDRESS,18,'UNI','Uniswap')),_defineProperty(_UNI,ChainId.RINKEBY,new Token(ChainId.RINKEBY,UNI_ADDRESS,18,'UNI','Uniswap')),_defineProperty(_UNI,ChainId.ROPSTEN,new Token(ChainId.ROPSTEN,UNI_ADDRESS,18,'UNI','Uniswap')),_defineProperty(_UNI,ChainId.GÖRLI,new Token(ChainId.GÖRLI,UNI_ADDRESS,18,'UNI','Uniswap')),_defineProperty(_UNI,ChainId.KOVAN,new Token(ChainId.KOVAN,UNI_ADDRESS,18,'UNI','Uniswap')),_UNI);export var COMMON_CONTRACT_NAMES=(_COMMON_CONTRACT_NAME={},_defineProperty(_COMMON_CONTRACT_NAME,UNI_ADDRESS,'UNI'),_defineProperty(_COMMON_CONTRACT_NAME,GOVERNANCE_ADDRESS,'Governance'),_defineProperty(_COMMON_CONTRACT_NAME,TIMELOCK_ADDRESS,'Timelock'),_COMMON_CONTRACT_NAME);// TODO: specify merkle distributor for mainnet\nexport var MERKLE_DISTRIBUTOR_ADDRESS=_defineProperty({},ChainId.MAINNET,'0x090D4613473dEE047c3f2706764f49E0821D256e');var WETH_ONLY=(_WETH_ONLY={},_defineProperty(_WETH_ONLY,ChainId.MAINNET,[WETH[ChainId.MAINNET]]),_defineProperty(_WETH_ONLY,ChainId.ROPSTEN,[WETH[ChainId.ROPSTEN]]),_defineProperty(_WETH_ONLY,ChainId.RINKEBY,[WETH[ChainId.RINKEBY]]),_defineProperty(_WETH_ONLY,ChainId.GÖRLI,[WETH[ChainId.GÖRLI]]),_defineProperty(_WETH_ONLY,ChainId.KOVAN,[WETH[ChainId.KOVAN]]),_WETH_ONLY);// used to construct intermediary pairs for trading\nexport var BASES_TO_CHECK_TRADES_AGAINST=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT,WBTC])));export var ADDITIONAL_BASES=_defineProperty({},ChainId.MAINNET,(_ChainId$MAINNET={'0xA948E86885e12Fb09AfEF8C52142EBDbDf73cD18':[new Token(ChainId.MAINNET,UNI_ADDRESS,18,'UNI','Uniswap')],'0x561a4717537ff4AF5c687328c0f7E90a319705C0':[new Token(ChainId.MAINNET,UNI_ADDRESS,18,'UNI','Uniswap')]},_defineProperty(_ChainId$MAINNET,FEI.address,[TRIBE]),_defineProperty(_ChainId$MAINNET,TRIBE.address,[FEI]),_defineProperty(_ChainId$MAINNET,FRAX.address,[FXS]),_defineProperty(_ChainId$MAINNET,FXS.address,[FRAX]),_defineProperty(_ChainId$MAINNET,WBTC.address,[renBTC]),_defineProperty(_ChainId$MAINNET,renBTC.address,[WBTC]),_ChainId$MAINNET));/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */export var CUSTOM_BASES=_defineProperty({},ChainId.MAINNET,_defineProperty({},AMPL.address,[DAI,WETH[ChainId.MAINNET]]));// used for display in the default list when adding liquidity\nexport var SUGGESTED_BASES=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT,WBTC])));// used to construct the list of all pairs we consider by default in the frontend\nexport var BASES_TO_TRACK_LIQUIDITY_FOR=_objectSpread(_objectSpread({},WETH_ONLY),{},_defineProperty({},ChainId.MAINNET,[].concat(_toConsumableArray(WETH_ONLY[ChainId.MAINNET]),[DAI,USDC,USDT,WBTC])));export var PINNED_PAIRS=_defineProperty({},ChainId.MAINNET,[[new Token(ChainId.MAINNET,'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',8,'cDAI','Compound Dai'),new Token(ChainId.MAINNET,'0x39AA39c021dfbaE8faC545936693aC917d5E7563',8,'cUSDC','Compound USD Coin')],[USDC,USDT],[DAI,USDT]]);export var SUPPORTED_WALLETS={INJECTED:{connector:injected,name:'Injected',iconName:'arrow-right.svg',description:'Injected web3 provider.',href:null,color:'#010101',primary:true},METAMASK:{connector:injected,name:'MetaMask',iconName:'metamask.png',description:'Easy-to-use browser extension.',href:null,color:'#E8831D'},WALLET_CONNECT:{connector:walletconnect,name:'WalletConnect',iconName:'walletConnectIcon.svg',description:'Connect to Trust Wallet, Rainbow Wallet and more...',href:null,color:'#4196FC',mobile:true},WALLET_LINK:{connector:walletlink,name:'Coinbase Wallet',iconName:'coinbaseWalletIcon.svg',description:'Use Coinbase Wallet app on mobile device',href:null,color:'#315CF5'},COINBASE_LINK:{name:'Open in Coinbase Wallet',iconName:'coinbaseWalletIcon.svg',description:'Open in Coinbase Wallet app.',href:'https://go.cb-w.com/mtUDhEZPy1',color:'#315CF5',mobile:true,mobileOnly:true},FORTMATIC:{connector:fortmatic,name:'Fortmatic',iconName:'fortmaticIcon.png',description:'Login using Fortmatic hosted wallet',href:null,color:'#6748FF',mobile:true},Portis:{connector:portis,name:'Portis',iconName:'portisIcon.png',description:'Login using Portis hosted wallet',href:null,color:'#4A6C9B',mobile:true}};export var NetworkContextName='NETWORK';// default allowed slippage, in bips\nexport var INITIAL_ALLOWED_SLIPPAGE=50;// 20 minutes, denominated in seconds\nexport var DEFAULT_DEADLINE_FROM_NOW=60*20;// used for rewards deadlines\nexport var BIG_INT_SECONDS_IN_WEEK=JSBI.BigInt(60*60*24*7);export var BIG_INT_ZERO=JSBI.BigInt(0);// one basis point\nexport var ONE_BIPS=new Percent(JSBI.BigInt(1),JSBI.BigInt(10000));export var BIPS_BASE=JSBI.BigInt(10000);// used for warning states\nexport var ALLOWED_PRICE_IMPACT_LOW=new Percent(JSBI.BigInt(100),BIPS_BASE);// 1%\nexport var ALLOWED_PRICE_IMPACT_MEDIUM=new Percent(JSBI.BigInt(300),BIPS_BASE);// 3%\nexport var ALLOWED_PRICE_IMPACT_HIGH=new Percent(JSBI.BigInt(500),BIPS_BASE);// 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport var PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN=new Percent(JSBI.BigInt(1000),BIPS_BASE);// 10%\n// for non expert mode disable swaps above this\nexport var BLOCKED_PRICE_IMPACT_NON_EXPERT=new Percent(JSBI.BigInt(1500),BIPS_BASE);// 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport var MIN_ETH=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(16));// .01 ETH\nexport var BETTER_TRADE_LESS_HOPS_THRESHOLD=new Percent(JSBI.BigInt(50),JSBI.BigInt(10000));export var ZERO_PERCENT=new Percent('0');export var ONE_HUNDRED_PERCENT=new Percent('1');// SDN OFAC addresses\nexport var BLOCKED_ADDRESSES=['0x7F367cC41522cE07553e823bf3be79A889DEbe1B','0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b','0x901bb9583b24D97e995513C6778dc6888AB6870e','0xA7e5d5A720f06526557c513402f2e6B5fA20b008','0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C'];","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/constants/index.ts"],"names":["ChainId","JSBI","Percent","Token","WETH","fortmatic","injected","portis","walletconnect","walletlink","ROUTER_ADDRESS","ZERO_ADDRESS","PRELOADED_PROPOSALS","AMPL","MAINNET","DAI","USDC","USDT","WBTC","FEI","TRIBE","FRAX","FXS","renBTC","AVERAGE_BLOCK_TIME_IN_SECS","PROPOSAL_LENGTH_IN_BLOCKS","PROPOSAL_LENGTH_IN_SECS","GOVERNANCE_ADDRESS","TIMELOCK_ADDRESS","UNI_ADDRESS","UNI","RINKEBY","ROPSTEN","GÖRLI","KOVAN","COMMON_CONTRACT_NAMES","MERKLE_DISTRIBUTOR_ADDRESS","WETH_ONLY","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","address","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","COINBASE_LINK","mobileOnly","FORTMATIC","Portis","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES"],"mappings":"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","sourcesContent":["import { ChainId, JSBI, Percent, Token, WETH } from '@uniswap/sdk'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\r\n\r\nexport const ROUTER_ADDRESS = '0x212fd459d3e9df2222452ffd3fd5eba51f6cff0f'\r\n\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\r\n\r\nexport { PRELOADED_PROPOSALS } from './proposals'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\r\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\r\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\r\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\r\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC')\r\nexport const FEI = new Token(ChainId.MAINNET, '0x956F47F50A910163D8BF957Cf5846D573E7f87CA', 18, 'FEI', 'Fei USD')\r\nexport const TRIBE = new Token(ChainId.MAINNET, '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B', 18, 'TRIBE', 'Tribe')\r\nexport const FRAX = new Token(ChainId.MAINNET, '0x853d955aCEf822Db058eb8505911ED77F175b99e', 18, 'FRAX', 'Frax')\r\nexport const FXS = new Token(ChainId.MAINNET, '0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0', 18, 'FXS', 'Frax Share')\r\nexport const renBTC = new Token(ChainId.MAINNET, '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D', 8, 'renBTC', 'renBTC')\r\n\r\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\r\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\r\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\r\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\r\n\r\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\r\n\r\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'\r\n\r\nconst UNI_ADDRESS = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'\r\nexport const UNI: { [chainId in ChainId]: Token } = {\r\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, UNI_ADDRESS, 18, 'UNI', 'Uniswap')\r\n}\r\n\r\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\r\n  [UNI_ADDRESS]: 'UNI',\r\n  [GOVERNANCE_ADDRESS]: 'Governance',\r\n  [TIMELOCK_ADDRESS]: 'Timelock'\r\n}\r\n\r\n// TODO: specify merkle distributor for mainnet\r\nexport const MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\r\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e'\r\n}\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\r\n  [ChainId.ROPSTEN]: [WETH[ChainId.ROPSTEN]],\r\n  [ChainId.RINKEBY]: [WETH[ChainId.RINKEBY]],\r\n  [ChainId.GÖRLI]: [WETH[ChainId.GÖRLI]],\r\n  [ChainId.KOVAN]: [WETH[ChainId.KOVAN]]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC]\r\n}\r\n\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    '0xA948E86885e12Fb09AfEF8C52142EBDbDf73cD18': [new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap')],\r\n    '0x561a4717537ff4AF5c687328c0f7E90a319705C0': [new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap')],\r\n    [FEI.address]: [TRIBE],\r\n    [TRIBE.address]: [FEI],\r\n    [FRAX.address]: [FXS],\r\n    [FXS.address]: [FRAX],\r\n    [WBTC.address]: [renBTC],\r\n    [renBTC.address]: [WBTC]\r\n  }\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n  }\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC]\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC]\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\r\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin')\r\n    ],\r\n    [USDC, USDT],\r\n    [DAI, USDT]\r\n  ]\r\n}\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector\r\n  name: string\r\n  iconName: string\r\n  description: string\r\n  href: string | null\r\n  color: string\r\n  primary?: true\r\n  mobile?: true\r\n  mobileOnly?: true\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D'\r\n  },\r\n  WALLET_CONNECT: {\r\n    connector: walletconnect,\r\n    name: 'WalletConnect',\r\n    iconName: 'walletConnectIcon.svg',\r\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n    href: null,\r\n    color: '#4196FC',\r\n    mobile: true\r\n  },\r\n  WALLET_LINK: {\r\n    connector: walletlink,\r\n    name: 'Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Use Coinbase Wallet app on mobile device',\r\n    href: null,\r\n    color: '#315CF5'\r\n  },\r\n  COINBASE_LINK: {\r\n    name: 'Open in Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Open in Coinbase Wallet app.',\r\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n    color: '#315CF5',\r\n    mobile: true,\r\n    mobileOnly: true\r\n  },\r\n  FORTMATIC: {\r\n    connector: fortmatic,\r\n    name: 'Fortmatic',\r\n    iconName: 'fortmaticIcon.png',\r\n    description: 'Login using Fortmatic hosted wallet',\r\n    href: null,\r\n    color: '#6748FF',\r\n    mobile: true\r\n  },\r\n  Portis: {\r\n    connector: portis,\r\n    name: 'Portis',\r\n    iconName: 'portisIcon.png',\r\n    description: 'Login using Portis hosted wallet',\r\n    href: null,\r\n    color: '#4A6C9B',\r\n    mobile: true\r\n  }\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\n// used for rewards deadlines\r\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C'\r\n]\r\n"]},"metadata":{},"sourceType":"module"}