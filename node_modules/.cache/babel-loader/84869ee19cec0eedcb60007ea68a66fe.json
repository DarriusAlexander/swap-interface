{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 48%;\\n  padding: 10px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border-radius: 12px;\\n  font-weight: 600;\\n  background-color: \",\";\\n  color: \",\";\\n  user-select: none;\\n\\n  :hover {\\n    cursor: pointer;\\n    opacity: 0.7;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border-radius: 12px;\\n  padding: 6px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  position: relative;\\n  padding-bottom: 80px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import{PaddedColumn,Separator}from'./styleds';import{RowBetween}from'components/Row';import{ArrowLeft}from'react-feather';import{Text}from'rebass';import{CloseIcon}from'theme';import styled from'styled-components';import{ManageLists}from'./ManageLists';import ManageTokens from'./ManageTokens';import{CurrencyModalView}from'./CurrencySearchModal';var Wrapper=styled.div(_templateObject());var ToggleWrapper=styled(RowBetween)(_templateObject2(),function(_ref){var theme=_ref.theme;return theme.bg3;});var ToggleOption=styled.div(_templateObject3(),function(_ref2){var theme=_ref2.theme,active=_ref2.active;return active?theme.bg1:theme.bg3;},function(_ref3){var theme=_ref3.theme,active=_ref3.active;return active?theme.text1:theme.text2;});export default function Manage(_ref4){var onDismiss=_ref4.onDismiss,setModalView=_ref4.setModalView,setImportList=_ref4.setImportList,setImportToken=_ref4.setImportToken,setListUrl=_ref4.setListUrl;// toggle between tokens and lists\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),showLists=_useState2[0],setShowLists=_useState2[1];return/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(PaddedColumn,null,/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ArrowLeft,{style:{cursor:'pointer'},onClick:function onClick(){return setModalView(CurrencyModalView.search);}}),/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:20},\"Manage\"),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDismiss}))),/*#__PURE__*/React.createElement(Separator,null),/*#__PURE__*/React.createElement(PaddedColumn,{style:{paddingBottom:0}},/*#__PURE__*/React.createElement(ToggleWrapper,null,/*#__PURE__*/React.createElement(ToggleOption,{onClick:function onClick(){return setShowLists(!showLists);},active:showLists},\"Lists\"),/*#__PURE__*/React.createElement(ToggleOption,{onClick:function onClick(){return setShowLists(!showLists);},active:!showLists},\"Tokens\"))),showLists?/*#__PURE__*/React.createElement(ManageLists,{setModalView:setModalView,setImportList:setImportList,setListUrl:setListUrl}):/*#__PURE__*/React.createElement(ManageTokens,{setModalView:setModalView,setImportToken:setImportToken}));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/components/SearchModal/Manage.tsx"],"names":["React","useState","PaddedColumn","Separator","RowBetween","ArrowLeft","Text","CloseIcon","styled","ManageLists","ManageTokens","CurrencyModalView","Wrapper","div","ToggleWrapper","theme","bg3","ToggleOption","active","bg1","text1","text2","Manage","onDismiss","setModalView","setImportList","setImportToken","setListUrl","showLists","setShowLists","cursor","search","paddingBottom"],"mappings":"qqCAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,YAAT,CAAuBC,SAAvB,KAAwC,WAAxC,CACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,iBAAT,KAAkC,uBAAlC,CAEA,GAAMC,CAAAA,OAAO,CAAGJ,MAAM,CAACK,GAAV,mBAAb,CAMA,GAAMC,CAAAA,aAAa,CAAGN,MAAM,CAACJ,UAAD,CAAT,oBACG,kBAAGW,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,GAArB,EADH,CAAnB,CAMA,GAAMC,CAAAA,YAAY,CAAGT,MAAM,CAACK,GAAV,oBAQI,mBAAGE,CAAAA,KAAH,OAAGA,KAAH,CAAUG,MAAV,OAAUA,MAAV,OAAwBA,CAAAA,MAAM,CAAGH,KAAK,CAACI,GAAT,CAAeJ,KAAK,CAACC,GAAnD,EARJ,CASP,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,CAAUG,MAAV,OAAUA,MAAV,OAAwBA,CAAAA,MAAM,CAAGH,KAAK,CAACK,KAAT,CAAiBL,KAAK,CAACM,KAArD,EATO,CAAlB,CAkBA,cAAe,SAASC,CAAAA,MAAT,OAYZ,IAXDC,CAAAA,SAWC,OAXDA,SAWC,CAVDC,YAUC,OAVDA,YAUC,CATDC,aASC,OATDA,aASC,CARDC,cAQC,OARDA,cAQC,CAPDC,UAOC,OAPDA,UAOC,CACD;AADC,cAEiC1B,QAAQ,CAAC,IAAD,CAFzC,wCAEM2B,SAFN,eAEiBC,YAFjB,eAID,mBACE,oBAAC,OAAD,mBACE,oBAAC,YAAD,mBACE,oBAAC,UAAD,mBACE,oBAAC,SAAD,EAAW,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAV,CAAlB,CAAyC,OAAO,CAAE,yBAAMN,CAAAA,YAAY,CAACb,iBAAiB,CAACoB,MAAnB,CAAlB,EAAlD,EADF,cAEE,oBAAC,IAAD,EAAM,UAAU,CAAE,GAAlB,CAAuB,QAAQ,CAAE,EAAjC,WAFF,cAKE,oBAAC,SAAD,EAAW,OAAO,CAAER,SAApB,EALF,CADF,CADF,cAUE,oBAAC,SAAD,MAVF,cAWE,oBAAC,YAAD,EAAc,KAAK,CAAE,CAAES,aAAa,CAAE,CAAjB,CAArB,eACE,oBAAC,aAAD,mBACE,oBAAC,YAAD,EAAc,OAAO,CAAE,yBAAMH,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAlB,EAAvB,CAAuD,MAAM,CAAEA,SAA/D,UADF,cAIE,oBAAC,YAAD,EAAc,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAAC,CAACD,SAAF,CAAlB,EAAvB,CAAuD,MAAM,CAAE,CAACA,SAAhE,WAJF,CADF,CAXF,CAqBGA,SAAS,cACR,oBAAC,WAAD,EAAa,YAAY,CAAEJ,YAA3B,CAAyC,aAAa,CAAEC,aAAxD,CAAuE,UAAU,CAAEE,UAAnF,EADQ,cAGR,oBAAC,YAAD,EAAc,YAAY,CAAEH,YAA5B,CAA0C,cAAc,CAAEE,cAA1D,EAxBJ,CADF,CA6BD","sourcesContent":["import React, { useState } from 'react'\r\nimport { PaddedColumn, Separator } from './styleds'\r\nimport { RowBetween } from 'components/Row'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { Text } from 'rebass'\r\nimport { CloseIcon } from 'theme'\r\nimport styled from 'styled-components'\r\nimport { Token } from '@uniswap/sdk'\r\nimport { ManageLists } from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { CurrencyModalView } from './CurrencySearchModal'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  padding-bottom: 80px;\r\n`\r\n\r\nconst ToggleWrapper = styled(RowBetween)`\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  border-radius: 12px;\r\n  padding: 6px;\r\n`\r\n\r\nconst ToggleOption = styled.div<{ active?: boolean }>`\r\n  width: 48%;\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 12px;\r\n  font-weight: 600;\r\n  background-color: ${({ theme, active }) => (active ? theme.bg1 : theme.bg3)};\r\n  color: ${({ theme, active }) => (active ? theme.text1 : theme.text2)};\r\n  user-select: none;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function Manage({\r\n  onDismiss,\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl\r\n}: {\r\n  onDismiss: () => void\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  // toggle between tokens and lists\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PaddedColumn>\r\n        <RowBetween>\r\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.search)} />\r\n          <Text fontWeight={500} fontSize={20}>\r\n            Manage\r\n          </Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n      <Separator />\r\n      <PaddedColumn style={{ paddingBottom: 0 }}>\r\n        <ToggleWrapper>\r\n          <ToggleOption onClick={() => setShowLists(!showLists)} active={showLists}>\r\n            Lists\r\n          </ToggleOption>\r\n          <ToggleOption onClick={() => setShowLists(!showLists)} active={!showLists}>\r\n            Tokens\r\n          </ToggleOption>\r\n        </ToggleWrapper>\r\n      </PaddedColumn>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}