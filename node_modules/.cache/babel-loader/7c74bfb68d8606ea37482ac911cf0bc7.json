{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  margin: 0 10px;\\n  width: 24px;\\n  color: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  border-radius: 50%;\\n  height: 24px;\\n  width: 24px;\\n  background-color: \",\";\\n  :hover {\\n    opacity: 0.8;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  border-radius: 20px;\\n  border: none;\\n  background: \",\";\\n  display: flex;\\n  width: fit-content;\\n  cursor: pointer;\\n  outline: none;\\n  padding: 0.4rem 0.4rem;\\n  align-items: center;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{TYPE}from'../../theme';var Wrapper=styled.button(_templateObject(),function(_ref){var theme=_ref.theme;return theme.bg1;});var ToggleElement=styled.span(_templateObject2(),function(_ref2){var isActive=_ref2.isActive,bgColor=_ref2.bgColor,theme=_ref2.theme;return isActive?bgColor:theme.bg4;});var StatusText=styled(TYPE.main)(_templateObject3(),function(_ref3){var theme=_ref3.theme,isActive=_ref3.isActive;return isActive?theme.text1:theme.text3;});export default function ListToggle(_ref4){var id=_ref4.id,isActive=_ref4.isActive,bgColor=_ref4.bgColor,toggle=_ref4.toggle;return/*#__PURE__*/React.createElement(Wrapper,{id:id,isActive:isActive,onClick:toggle},isActive&&/*#__PURE__*/React.createElement(StatusText,{fontWeight:\"600\",margin:\"0 6px\",isActive:true},\"ON\"),/*#__PURE__*/React.createElement(ToggleElement,{isActive:isActive,bgColor:bgColor}),!isActive&&/*#__PURE__*/React.createElement(StatusText,{fontWeight:\"600\",margin:\"0 6px\",isActive:false},\"OFF\"));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/components/Toggle/ListToggle.tsx"],"names":["React","styled","TYPE","Wrapper","button","theme","bg1","ToggleElement","span","isActive","bgColor","bg4","StatusText","main","text1","text3","ListToggle","id","toggle"],"mappings":"y8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,KAAqB,aAArB,CAEA,GAAMC,CAAAA,OAAO,CAAGF,MAAM,CAACG,MAAV,mBAGG,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,GAArB,EAHH,CAAb,CAYA,GAAMC,CAAAA,aAAa,CAAGN,MAAM,CAACO,IAAV,oBAIG,mBAAGC,CAAAA,QAAH,OAAGA,QAAH,CAAaC,OAAb,OAAaA,OAAb,CAAsBL,KAAtB,OAAsBA,KAAtB,OAAmCI,CAAAA,QAAQ,CAAGC,OAAH,CAAaL,KAAK,CAACM,GAA9D,EAJH,CAAnB,CAUA,GAAMC,CAAAA,UAAU,CAAGX,MAAM,CAACC,IAAI,CAACW,IAAN,CAAT,oBAGL,mBAAGR,CAAAA,KAAH,OAAGA,KAAH,CAAUI,QAAV,OAAUA,QAAV,OAA0BA,CAAAA,QAAQ,CAAGJ,KAAK,CAACS,KAAT,CAAiBT,KAAK,CAACU,KAAzD,EAHK,CAAhB,CAaA,cAAe,SAASC,CAAAA,UAAT,OAAoE,IAA9CC,CAAAA,EAA8C,OAA9CA,EAA8C,CAA1CR,QAA0C,OAA1CA,QAA0C,CAAhCC,OAAgC,OAAhCA,OAAgC,CAAvBQ,MAAuB,OAAvBA,MAAuB,CACjF,mBACE,oBAAC,OAAD,EAAS,EAAE,CAAED,EAAb,CAAiB,QAAQ,CAAER,QAA3B,CAAqC,OAAO,CAAES,MAA9C,EACGT,QAAQ,eACP,oBAAC,UAAD,EAAY,UAAU,CAAC,KAAvB,CAA6B,MAAM,CAAC,OAApC,CAA4C,QAAQ,CAAE,IAAtD,OAFJ,cAME,oBAAC,aAAD,EAAe,QAAQ,CAAEA,QAAzB,CAAmC,OAAO,CAAEC,OAA5C,EANF,CAOG,CAACD,QAAD,eACC,oBAAC,UAAD,EAAY,UAAU,CAAC,KAAvB,CAA6B,MAAM,CAAC,OAApC,CAA4C,QAAQ,CAAE,KAAtD,QARJ,CADF,CAeD","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TYPE } from '../../theme'\r\n\r\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\r\n  border-radius: 20px;\r\n  border: none;\r\n  background: ${({ theme }) => theme.bg1};\r\n  display: flex;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  outline: none;\r\n  padding: 0.4rem 0.4rem;\r\n  align-items: center;\r\n`\r\n\r\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\r\n  border-radius: 50%;\r\n  height: 24px;\r\n  width: 24px;\r\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : theme.bg4)};\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst StatusText = styled(TYPE.main)<{ isActive?: boolean }>`\r\n  margin: 0 10px;\r\n  width: 24px;\r\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text3)};\r\n`\r\n\r\nexport interface ToggleProps {\r\n  id?: string\r\n  isActive: boolean\r\n  bgColor: string\r\n  toggle: () => void\r\n}\r\n\r\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\r\n  return (\r\n    <Wrapper id={id} isActive={isActive} onClick={toggle}>\r\n      {isActive && (\r\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={true}>\r\n          ON\r\n        </StatusText>\r\n      )}\r\n      <ToggleElement isActive={isActive} bgColor={bgColor} />\r\n      {!isActive && (\r\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={false}>\r\n          OFF\r\n        </StatusText>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}