{"ast":null,"code":"import{ETHER,Token}from'@uniswap/sdk';export function currencyId(currency){if(currency===ETHER)return'ETH';if(currency instanceof Token)return currency.address;throw new Error('invalid currency');}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/utils/currencyId.ts"],"names":["ETHER","Token","currencyId","currency","address","Error"],"mappings":"AAAA,OAAmBA,KAAnB,CAA0BC,KAA1B,KAAuC,cAAvC,CAEA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,QAApB,CAAgD,CACrD,GAAIA,QAAQ,GAAKH,KAAjB,CAAwB,MAAO,KAAP,CACxB,GAAIG,QAAQ,WAAYF,CAAAA,KAAxB,CAA+B,MAAOE,CAAAA,QAAQ,CAACC,OAAhB,CAC/B,KAAM,IAAIC,CAAAA,KAAJ,CAAU,kBAAV,CAAN,CACD","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'ETH'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n"]},"metadata":{},"sourceType":"module"}