{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  max-width: 140px;\\n  font-size: 12px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  height: 16px;\\n  width: 16px;\\n  margin-right: 6px;\\n  stroke: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  padding: 4px 20px;\\n  height: 56px;\\n  display: grid;\\n  grid-template-columns: auto minmax(auto, 1fr) auto;\\n  grid-gap: 16px;\\n  align-items: center;\\n\\n  opacity: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{AutoRow,RowFixed}from'components/Row';import{AutoColumn}from'components/Column';import CurrencyLogo from'components/CurrencyLogo';import{TYPE}from'theme';import ListLogo from'components/ListLogo';import{useActiveWeb3React}from'hooks';import{useCombinedInactiveList}from'state/lists/hooks';import useTheme from'hooks/useTheme';import{ButtonPrimary}from'components/Button';import styled from'styled-components';import{useIsUserAddedToken,useIsTokenActive}from'hooks/Tokens';import{CheckCircle}from'react-feather';var TokenSection=styled.div(_templateObject(),function(_ref){var dim=_ref.dim;return dim?'0.4':'1';});var CheckIcon=styled(CheckCircle)(_templateObject2(),function(_ref2){var theme=_ref2.theme;return theme.green1;});var NameOverflow=styled.div(_templateObject3());export default function ImportRow(_ref3){var _inactiveTokenList$ch,_inactiveTokenList$ch2;var token=_ref3.token,style=_ref3.style,dim=_ref3.dim,showImportView=_ref3.showImportView,setImportToken=_ref3.setImportToken;// gloabls\nvar _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useTheme();// check if token comes from list\nvar inactiveTokenList=useCombinedInactiveList();var list=chainId&&(inactiveTokenList===null||inactiveTokenList===void 0?void 0:(_inactiveTokenList$ch=inactiveTokenList[chainId])===null||_inactiveTokenList$ch===void 0?void 0:(_inactiveTokenList$ch2=_inactiveTokenList$ch[token.address])===null||_inactiveTokenList$ch2===void 0?void 0:_inactiveTokenList$ch2.list);// check if already active on list or local storage tokens\nvar isAdded=useIsUserAddedToken(token);var isActive=useIsTokenActive(token);return/*#__PURE__*/React.createElement(TokenSection,{style:style},/*#__PURE__*/React.createElement(CurrencyLogo,{currency:token,size:'24px',style:{opacity:dim?'0.6':'1'}}),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"4px\",style:{opacity:dim?'0.6':'1'}},/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(TYPE.body,{fontWeight:500},token.symbol),/*#__PURE__*/React.createElement(TYPE.darkGray,{ml:\"8px\",fontWeight:300},/*#__PURE__*/React.createElement(NameOverflow,{title:token.name},token.name))),list&&list.logoURI&&/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(TYPE.small,{mr:\"4px\",color:theme.text3},\"via \",list.name),/*#__PURE__*/React.createElement(ListLogo,{logoURI:list.logoURI,size:\"12px\"}))),!isActive&&!isAdded?/*#__PURE__*/React.createElement(ButtonPrimary,{width:\"fit-content\",padding:\"6px 12px\",fontWeight:500,fontSize:\"14px\",onClick:function onClick(){setImportToken&&setImportToken(token);showImportView();}},\"Import\"):/*#__PURE__*/React.createElement(RowFixed,{style:{minWidth:'fit-content'}},/*#__PURE__*/React.createElement(CheckIcon,null),/*#__PURE__*/React.createElement(TYPE.main,{color:theme.green1},\"Active\")));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/components/SearchModal/ImportRow.tsx"],"names":["React","AutoRow","RowFixed","AutoColumn","CurrencyLogo","TYPE","ListLogo","useActiveWeb3React","useCombinedInactiveList","useTheme","ButtonPrimary","styled","useIsUserAddedToken","useIsTokenActive","CheckCircle","TokenSection","div","dim","CheckIcon","theme","green1","NameOverflow","ImportRow","token","style","showImportView","setImportToken","chainId","inactiveTokenList","list","address","isAdded","isActive","opacity","symbol","name","logoURI","text3","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\r\nimport { Token } from '@uniswap/sdk'\r\nimport { AutoRow, RowFixed } from 'components/Row'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { TYPE } from 'theme'\r\nimport ListLogo from 'components/ListLogo'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ButtonPrimary } from 'components/Button'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { CheckCircle } from 'react-feather'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckCircle)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.green1};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // gloabls\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useTheme()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\r\n          <TYPE.darkGray ml=\"8px\" fontWeight={300}>\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </TYPE.darkGray>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <TYPE.small mr=\"4px\" color={theme.text3}>\r\n              via {list.name}\r\n            </TYPE.small>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <ButtonPrimary\r\n          width=\"fit-content\"\r\n          padding=\"6px 12px\"\r\n          fontWeight={500}\r\n          fontSize=\"14px\"\r\n          onClick={() => {\r\n            setImportToken && setImportToken(token)\r\n            showImportView()\r\n          }}\r\n        >\r\n          Import\r\n        </ButtonPrimary>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <TYPE.main color={theme.green1}>Active</TYPE.main>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}