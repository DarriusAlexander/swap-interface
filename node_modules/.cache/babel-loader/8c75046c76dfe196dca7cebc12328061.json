{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{AddressZero}from'@ethersproject/constants';import{Currency,CurrencyAmount,Fraction,JSBI,Percent,Token,TokenAmount,WETH}from'@uniswap/sdk';import React,{useCallback,useMemo,useState}from'react';import ReactGA from'react-ga';import{Redirect}from'react-router';import{Text}from'rebass';import{ButtonConfirmed}from'../../components/Button';import{LightCard,PinkCard,YellowCard}from'../../components/Card';import{AutoColumn}from'../../components/Column';import CurrencyLogo from'../../components/CurrencyLogo';import FormattedCurrencyAmount from'../../components/FormattedCurrencyAmount';import QuestionHelper from'../../components/QuestionHelper';import{AutoRow,RowBetween,RowFixed}from'../../components/Row';import{Dots}from'../../components/swap/styleds';import{DEFAULT_DEADLINE_FROM_NOW,INITIAL_ALLOWED_SLIPPAGE}from'../../constants';import{MIGRATOR_ADDRESS}from'../../constants/abis/migrator';import{PairState,usePair}from'../../data/Reserves';import{useTotalSupply}from'../../data/TotalSupply';import{useActiveWeb3React}from'../../hooks';import{useToken}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import{useV1ExchangeContract,useV2MigratorContract}from'../../hooks/useContract';import{NEVER_RELOAD,useSingleCallResult}from'../../state/multicall/hooks';import{useIsTransactionPending,useTransactionAdder}from'../../state/transactions/hooks';import{useETHBalances,useTokenBalance}from'../../state/wallet/hooks';import{BackArrow,ExternalLink,TYPE}from'../../theme';import{getEtherscanLink,isAddress}from'../../utils';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';var WEI_DENOM=JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(18));var ZERO=JSBI.BigInt(0);var ONE=JSBI.BigInt(1);var ZERO_FRACTION=new Fraction(ZERO,ONE);var ALLOWED_OUTPUT_MIN_PERCENT=new Percent(JSBI.BigInt(10000-INITIAL_ALLOWED_SLIPPAGE),JSBI.BigInt(10000));export function V1LiquidityInfo(_ref){var token=_ref.token,liquidityTokenAmount=_ref.liquidityTokenAmount,tokenWorth=_ref.tokenWorth,ethWorth=_ref.ethWorth;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{style:{justifyContent:'flex-start',width:'fit-content'}},/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"24px\",currency:token}),/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:'.75rem'}},/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,/*#__PURE__*/React.createElement(FormattedCurrencyAmount,{currencyAmount:liquidityTokenAmount}),' ',chainId&&token.equals(WETH[chainId])?'WETH':token.symbol,\"/ETH\"))),/*#__PURE__*/React.createElement(RowBetween,{my:\"1rem\"},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},\"Pooled \",chainId&&token.equals(WETH[chainId])?'WETH':token.symbol,\":\"),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500,marginLeft:'6px'},tokenWorth.toSignificant(4)),/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"20px\",style:{marginLeft:'8px'},currency:token}))),/*#__PURE__*/React.createElement(RowBetween,{mb:\"1rem\"},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},\"Pooled ETH:\"),/*#__PURE__*/React.createElement(RowFixed,null,/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500,marginLeft:'6px'},/*#__PURE__*/React.createElement(FormattedCurrencyAmount,{currencyAmount:ethWorth})),/*#__PURE__*/React.createElement(CurrencyLogo,{size:\"20px\",style:{marginLeft:'8px'},currency:Currency.ETHER}))));}function V1PairMigration(_ref2){var _useETHBalances,_v1SpotPrice$invert,_v2SpotPrice$invert,_v1SpotPrice$invert2;var liquidityTokenAmount=_ref2.liquidityTokenAmount,token=_ref2.token;var _useActiveWeb3React2=useActiveWeb3React(),account=_useActiveWeb3React2.account,chainId=_useActiveWeb3React2.chainId;var totalSupply=useTotalSupply(liquidityTokenAmount.token);var exchangeETHBalance=(_useETHBalances=useETHBalances([liquidityTokenAmount.token.address]))===null||_useETHBalances===void 0?void 0:_useETHBalances[liquidityTokenAmount.token.address];var exchangeTokenBalance=useTokenBalance(liquidityTokenAmount.token.address,token);var _usePair=usePair(chainId?WETH[chainId]:undefined,token),_usePair2=_slicedToArray(_usePair,2),v2PairState=_usePair2[0],v2Pair=_usePair2[1];var isFirstLiquidityProvider=v2PairState===PairState.NOT_EXISTS;var v2SpotPrice=chainId&&v2Pair?v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])):undefined;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmingMigration=_useState2[0],setConfirmingMigration=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),pendingMigrationHash=_useState4[0],setPendingMigrationHash=_useState4[1];var shareFraction=totalSupply?new Percent(liquidityTokenAmount.raw,totalSupply.raw):ZERO_FRACTION;var ethWorth=exchangeETHBalance?CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient):CurrencyAmount.ether(ZERO);var tokenWorth=exchangeTokenBalance?new TokenAmount(token,shareFraction.multiply(exchangeTokenBalance.raw).quotient):new TokenAmount(token,ZERO);var _useApproveCallback=useApproveCallback(liquidityTokenAmount,MIGRATOR_ADDRESS),_useApproveCallback2=_slicedToArray(_useApproveCallback,2),approval=_useApproveCallback2[0],approve=_useApproveCallback2[1];var v1SpotPrice=exchangeTokenBalance&&exchangeETHBalance?exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw,WEI_DENOM)):null;var priceDifferenceFraction=v1SpotPrice&&v2SpotPrice?v1SpotPrice.divide(v2SpotPrice).multiply('100').subtract('100'):undefined;var priceDifferenceAbs=(priceDifferenceFraction===null||priceDifferenceFraction===void 0?void 0:priceDifferenceFraction.lessThan(ZERO))?priceDifferenceFraction===null||priceDifferenceFraction===void 0?void 0:priceDifferenceFraction.multiply('-1'):priceDifferenceFraction;var minAmountETH=v2SpotPrice&&tokenWorth?tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient:ethWorth===null||ethWorth===void 0?void 0:ethWorth.numerator;var minAmountToken=v2SpotPrice&&ethWorth?ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10),JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient:tokenWorth===null||tokenWorth===void 0?void 0:tokenWorth.numerator;var addTransaction=useTransactionAdder();var isMigrationPending=useIsTransactionPending(pendingMigrationHash!==null&&pendingMigrationHash!==void 0?pendingMigrationHash:undefined);var migrator=useV2MigratorContract();var migrate=useCallback(function(){if(!minAmountToken||!minAmountETH||!migrator)return;setConfirmingMigration(true);migrator.migrate(token.address,minAmountToken.toString(),minAmountETH.toString(),account,Math.floor(new Date().getTime()/1000)+DEFAULT_DEADLINE_FROM_NOW).then(function(response){ReactGA.event({category:'Migrate',action:'V1->V2',label:token===null||token===void 0?void 0:token.symbol});addTransaction(response,{summary:\"Migrate \".concat(token.symbol,\" liquidity to V2\")});setPendingMigrationHash(response.hash);}).catch(function(){setConfirmingMigration(false);});},[minAmountToken,minAmountETH,migrator,token,account,addTransaction]);var noLiquidityTokens=!!liquidityTokenAmount&&liquidityTokenAmount.equalTo(ZERO);var largePriceDifference=!!priceDifferenceAbs&&!priceDifferenceAbs.lessThan(JSBI.BigInt(5));var isSuccessfullyMigrated=!!pendingMigrationHash&&noLiquidityTokens;return/*#__PURE__*/React.createElement(AutoColumn,{gap:\"20px\"},/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\",' ',chainId&&/*#__PURE__*/React.createElement(ExternalLink,{href:getEtherscanLink(chainId,MIGRATOR_ADDRESS,'address')},/*#__PURE__*/React.createElement(TYPE.blue,{display:\"inline\"},\"Uniswap migration contract\\u2197\")),\".\"),!isFirstLiquidityProvider&&largePriceDifference?/*#__PURE__*/React.createElement(YellowCard,null,/*#__PURE__*/React.createElement(TYPE.body,{style:{marginBottom:8,fontWeight:400}},\"It\",\"'\",\"s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V1 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:v1SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:(_v1SpotPrice$invert=v1SpotPrice.invert())===null||_v1SpotPrice$invert===void 0?void 0:_v1SpotPrice$invert.toSignificant(6),\" ETH/\",token.symbol)),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V2 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v2SpotPrice===null||v2SpotPrice===void 0?void 0:v2SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v2SpotPrice===null||v2SpotPrice===void 0?void 0:(_v2SpotPrice$invert=v2SpotPrice.invert())===null||_v2SpotPrice$invert===void 0?void 0:_v2SpotPrice$invert.toSignificant(6),\" ETH/\",token.symbol)),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,{color:\"inherit\"},\"Price Difference:\"),/*#__PURE__*/React.createElement(TYPE.black,{color:\"inherit\"},priceDifferenceAbs===null||priceDifferenceAbs===void 0?void 0:priceDifferenceAbs.toSignificant(4),\"%\")))):null,isFirstLiquidityProvider&&/*#__PURE__*/React.createElement(PinkCard,null,/*#__PURE__*/React.createElement(TYPE.body,{style:{marginBottom:8,fontWeight:400}},\"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.body,null,\"V1 Price:\"),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:v1SpotPrice.toSignificant(6),\" \",token.symbol,\"/ETH\")),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(TYPE.black,null,v1SpotPrice===null||v1SpotPrice===void 0?void 0:(_v1SpotPrice$invert2=v1SpotPrice.invert())===null||_v1SpotPrice$invert2===void 0?void 0:_v1SpotPrice$invert2.toSignificant(6),\" ETH/\",token.symbol)))),/*#__PURE__*/React.createElement(LightCard,null,/*#__PURE__*/React.createElement(V1LiquidityInfo,{token:token,liquidityTokenAmount:liquidityTokenAmount,tokenWorth:tokenWorth,ethWorth:ethWorth}),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',marginTop:'1rem'}},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{flex:'1',marginRight:12}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:approval===ApprovalState.APPROVED,disabled:approval!==ApprovalState.NOT_APPROVED,onClick:approve},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(Dots,null,\"Approving\"):approval===ApprovalState.APPROVED?'Approved':'Approve')),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",style:{flex:'1'}},/*#__PURE__*/React.createElement(ButtonConfirmed,{confirmed:isSuccessfullyMigrated,disabled:isSuccessfullyMigrated||noLiquidityTokens||isMigrationPending||approval!==ApprovalState.APPROVED||confirmingMigration,onClick:migrate},isSuccessfullyMigrated?'Success':isMigrationPending?/*#__PURE__*/React.createElement(Dots,null,\"Migrating\"):'Migrate')))),/*#__PURE__*/React.createElement(TYPE.darkGray,{style:{textAlign:'center'}},\"Your Uniswap V1 \".concat(token.symbol,\"/ETH liquidity will become Uniswap V2 \").concat(token.symbol,\"/ETH liquidity.\")));}export default function MigrateV1Exchange(_ref3){var _useSingleCallResult,_useSingleCallResult$;var history=_ref3.history,address=_ref3.match.params.address;var validatedAddress=isAddress(address);var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId,account=_useActiveWeb3React3.account;var exchangeContract=useV1ExchangeContract(validatedAddress?validatedAddress:undefined);var tokenAddress=(_useSingleCallResult=useSingleCallResult(exchangeContract,'tokenAddress',undefined,NEVER_RELOAD))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:_useSingleCallResult$[0];var token=useToken(tokenAddress);var liquidityToken=useMemo(function(){return validatedAddress&&chainId&&token?new Token(chainId,validatedAddress,18,\"UNI-V1-\".concat(token.symbol),'Uniswap V1'):undefined;},[chainId,validatedAddress,token]);var userLiquidityBalance=useTokenBalance(account!==null&&account!==void 0?account:undefined,liquidityToken);// redirect for invalid url params\nif(!validatedAddress||tokenAddress===AddressZero){console.error('Invalid address in path',address);return/*#__PURE__*/React.createElement(Redirect,{to:\"/migrate/v1\"});}return/*#__PURE__*/React.createElement(BodyWrapper,{style:{padding:24}},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"16px\"},/*#__PURE__*/React.createElement(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\"},/*#__PURE__*/React.createElement(BackArrow,{to:\"/migrate/v1\"}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Migrate V1 Liquidity\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"}))),!account?/*#__PURE__*/React.createElement(TYPE.largeHeader,null,\"You must connect an account.\"):validatedAddress&&chainId&&(token===null||token===void 0?void 0:token.equals(WETH[chainId]))?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TYPE.body,{my:9,style:{fontWeight:400}},\"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"),/*#__PURE__*/React.createElement(ButtonConfirmed,{onClick:function onClick(){history.push(\"/remove/v1/\".concat(validatedAddress));}},\"Remove\")):userLiquidityBalance&&token?/*#__PURE__*/React.createElement(V1PairMigration,{liquidityTokenAmount:userLiquidityBalance,token:token}):/*#__PURE__*/React.createElement(EmptyState,{message:\"Loading...\"})));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","React","useCallback","useMemo","useState","ReactGA","Redirect","Text","ButtonConfirmed","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","FormattedCurrencyAmount","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","equals","symbol","toSignificant","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","undefined","v2PairState","v2Pair","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","event","category","action","label","summary","hash","catch","noLiquidityTokens","equalTo","largePriceDifference","isSuccessfullyMigrated","fontWeight","marginBottom","invert","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","padding","alignItems","push"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from '@uniswap/sdk'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { Redirect, RouteComponentProps } from 'react-router'\r\nimport { Text } from 'rebass'\r\nimport { ButtonConfirmed } from '../../components/Button'\r\nimport { LightCard, PinkCard, YellowCard } from '../../components/Card'\r\nimport { AutoColumn } from '../../components/Column'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\r\nimport QuestionHelper from '../../components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\r\nimport { Dots } from '../../components/swap/styleds'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../constants'\r\nimport { MIGRATOR_ADDRESS } from '../../constants/abis/migrator'\r\nimport { PairState, usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useToken } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport { useV1ExchangeContract, useV2MigratorContract } from '../../hooks/useContract'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useETHBalances, useTokenBalance } from '../../state/wallet/hooks'\r\nimport { BackArrow, ExternalLink, TYPE } from '../../theme'\r\nimport { getEtherscanLink, isAddress } from '../../utils'\r\nimport { BodyWrapper } from '../AppBody'\r\nimport { EmptyState } from './EmptyState'\r\n\r\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\r\nconst ZERO = JSBI.BigInt(0)\r\nconst ONE = JSBI.BigInt(1)\r\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\r\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000))\r\n\r\nexport function V1LiquidityInfo({\r\n  token,\r\n  liquidityTokenAmount,\r\n  tokenWorth,\r\n  ethWorth\r\n}: {\r\n  token: Token\r\n  liquidityTokenAmount: TokenAmount\r\n  tokenWorth: TokenAmount\r\n  ethWorth: CurrencyAmount\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <AutoRow style={{ justifyContent: 'flex-start', width: 'fit-content' }}>\r\n        <CurrencyLogo size=\"24px\" currency={token} />\r\n        <div style={{ marginLeft: '.75rem' }}>\r\n          <TYPE.mediumHeader>\r\n            {<FormattedCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\r\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\r\n          </TYPE.mediumHeader>\r\n        </div>\r\n      </AutoRow>\r\n\r\n      <RowBetween my=\"1rem\">\r\n        <Text fontSize={16} fontWeight={500}>\r\n          Pooled {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}:\r\n        </Text>\r\n        <RowFixed>\r\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n            {tokenWorth.toSignificant(4)}\r\n          </Text>\r\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={token} />\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween mb=\"1rem\">\r\n        <Text fontSize={16} fontWeight={500}>\r\n          Pooled ETH:\r\n        </Text>\r\n        <RowFixed>\r\n          <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\r\n            <FormattedCurrencyAmount currencyAmount={ethWorth} />\r\n          </Text>\r\n          <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={Currency.ETHER} />\r\n        </RowFixed>\r\n      </RowBetween>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction V1PairMigration({ liquidityTokenAmount, token }: { liquidityTokenAmount: TokenAmount; token: Token }) {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\r\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\r\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\r\n\r\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token)\r\n  const isFirstLiquidityProvider: boolean = v2PairState === PairState.NOT_EXISTS\r\n\r\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined\r\n\r\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\r\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\r\n\r\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\r\n\r\n  const ethWorth: CurrencyAmount = exchangeETHBalance\r\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\r\n    : CurrencyAmount.ether(ZERO)\r\n\r\n  const tokenWorth: TokenAmount = exchangeTokenBalance\r\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\r\n    : new TokenAmount(token, ZERO)\r\n\r\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS)\r\n\r\n  const v1SpotPrice =\r\n    exchangeTokenBalance && exchangeETHBalance\r\n      ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM))\r\n      : null\r\n\r\n  const priceDifferenceFraction: Fraction | undefined =\r\n    v1SpotPrice && v2SpotPrice\r\n      ? v1SpotPrice\r\n          .divide(v2SpotPrice)\r\n          .multiply('100')\r\n          .subtract('100')\r\n      : undefined\r\n\r\n  const priceDifferenceAbs: Fraction | undefined = priceDifferenceFraction?.lessThan(ZERO)\r\n    ? priceDifferenceFraction?.multiply('-1')\r\n    : priceDifferenceFraction\r\n\r\n  const minAmountETH: JSBI | undefined =\r\n    v2SpotPrice && tokenWorth\r\n      ? tokenWorth\r\n          .divide(v2SpotPrice)\r\n          .multiply(WEI_DENOM)\r\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\r\n      : ethWorth?.numerator\r\n\r\n  const minAmountToken: JSBI | undefined =\r\n    v2SpotPrice && ethWorth\r\n      ? ethWorth\r\n          .multiply(v2SpotPrice)\r\n          .multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals)))\r\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\r\n      : tokenWorth?.numerator\r\n\r\n  const addTransaction = useTransactionAdder()\r\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\r\n\r\n  const migrator = useV2MigratorContract()\r\n  const migrate = useCallback(() => {\r\n    if (!minAmountToken || !minAmountETH || !migrator) return\r\n\r\n    setConfirmingMigration(true)\r\n    migrator\r\n      .migrate(\r\n        token.address,\r\n        minAmountToken.toString(),\r\n        minAmountETH.toString(),\r\n        account,\r\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\r\n      )\r\n      .then((response: TransactionResponse) => {\r\n        ReactGA.event({\r\n          category: 'Migrate',\r\n          action: 'V1->V2',\r\n          label: token?.symbol\r\n        })\r\n\r\n        addTransaction(response, {\r\n          summary: `Migrate ${token.symbol} liquidity to V2`\r\n        })\r\n        setPendingMigrationHash(response.hash)\r\n      })\r\n      .catch(() => {\r\n        setConfirmingMigration(false)\r\n      })\r\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction])\r\n\r\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\r\n\r\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5))\r\n\r\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens\r\n\r\n  return (\r\n    <AutoColumn gap=\"20px\">\r\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\r\n        This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely\r\n        trustless thanks to the{' '}\r\n        {chainId && (\r\n          <ExternalLink href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, 'address')}>\r\n            <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\r\n          </ExternalLink>\r\n        )}\r\n        .\r\n      </TYPE.body>\r\n\r\n      {!isFirstLiquidityProvider && largePriceDifference ? (\r\n        <YellowCard>\r\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\r\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems\r\n            incorrect, you can either make a swap to move the price or wait for someone else to do so.\r\n          </TYPE.body>\r\n          <AutoColumn gap=\"8px\">\r\n            <RowBetween>\r\n              <TYPE.body>V1 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n\r\n            <RowBetween>\r\n              <TYPE.body>V2 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n\r\n            <RowBetween>\r\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\r\n              <TYPE.black color=\"inherit\">{priceDifferenceAbs?.toSignificant(4)}%</TYPE.black>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        </YellowCard>\r\n      ) : null}\r\n\r\n      {isFirstLiquidityProvider && (\r\n        <PinkCard>\r\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\r\n            You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the\r\n            current V1 price. Your transaction cost also includes the gas to create the pool.\r\n          </TYPE.body>\r\n\r\n          <AutoColumn gap=\"8px\">\r\n            <RowBetween>\r\n              <TYPE.body>V1 Price:</TYPE.body>\r\n              <TYPE.black>\r\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\r\n              </TYPE.black>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <TYPE.black>\r\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\r\n              </TYPE.black>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        </PinkCard>\r\n      )}\r\n\r\n      <LightCard>\r\n        <V1LiquidityInfo\r\n          token={token}\r\n          liquidityTokenAmount={liquidityTokenAmount}\r\n          tokenWorth={tokenWorth}\r\n          ethWorth={ethWorth}\r\n        />\r\n\r\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\r\n          <AutoColumn gap=\"12px\" style={{ flex: '1', marginRight: 12 }}>\r\n            <ButtonConfirmed\r\n              confirmed={approval === ApprovalState.APPROVED}\r\n              disabled={approval !== ApprovalState.NOT_APPROVED}\r\n              onClick={approve}\r\n            >\r\n              {approval === ApprovalState.PENDING ? (\r\n                <Dots>Approving</Dots>\r\n              ) : approval === ApprovalState.APPROVED ? (\r\n                'Approved'\r\n              ) : (\r\n                'Approve'\r\n              )}\r\n            </ButtonConfirmed>\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\r\n            <ButtonConfirmed\r\n              confirmed={isSuccessfullyMigrated}\r\n              disabled={\r\n                isSuccessfullyMigrated ||\r\n                noLiquidityTokens ||\r\n                isMigrationPending ||\r\n                approval !== ApprovalState.APPROVED ||\r\n                confirmingMigration\r\n              }\r\n              onClick={migrate}\r\n            >\r\n              {isSuccessfullyMigrated ? 'Success' : isMigrationPending ? <Dots>Migrating</Dots> : 'Migrate'}\r\n            </ButtonConfirmed>\r\n          </AutoColumn>\r\n        </div>\r\n      </LightCard>\r\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\r\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\r\n      </TYPE.darkGray>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default function MigrateV1Exchange({\r\n  history,\r\n  match: {\r\n    params: { address }\r\n  }\r\n}: RouteComponentProps<{ address: string }>) {\r\n  const validatedAddress = isAddress(address)\r\n  const { chainId, account } = useActiveWeb3React()\r\n\r\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined)\r\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\r\n\r\n  const token = useToken(tokenAddress)\r\n\r\n  const liquidityToken: Token | undefined = useMemo(\r\n    () =>\r\n      validatedAddress && chainId && token\r\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\r\n        : undefined,\r\n    [chainId, validatedAddress, token]\r\n  )\r\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\r\n\r\n  // redirect for invalid url params\r\n  if (!validatedAddress || tokenAddress === AddressZero) {\r\n    console.error('Invalid address in path', address)\r\n    return <Redirect to=\"/migrate/v1\" />\r\n  }\r\n\r\n  return (\r\n    <BodyWrapper style={{ padding: 24 }}>\r\n      <AutoColumn gap=\"16px\">\r\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\r\n          <BackArrow to=\"/migrate/v1\" />\r\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\r\n          <div>\r\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\r\n          </div>\r\n        </AutoRow>\r\n\r\n        {!account ? (\r\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\r\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\r\n          <>\r\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\r\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You\r\n              may want to remove your liquidity instead.\r\n            </TYPE.body>\r\n\r\n            <ButtonConfirmed\r\n              onClick={() => {\r\n                history.push(`/remove/v1/${validatedAddress}`)\r\n              }}\r\n            >\r\n              Remove\r\n            </ButtonConfirmed>\r\n          </>\r\n        ) : userLiquidityBalance && token ? (\r\n          <V1PairMigration liquidityTokenAmount={userLiquidityBalance} token={token} />\r\n        ) : (\r\n          <EmptyState message=\"Loading...\" />\r\n        )}\r\n      </AutoColumn>\r\n    </BodyWrapper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}