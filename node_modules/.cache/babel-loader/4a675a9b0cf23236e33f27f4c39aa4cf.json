{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var isClient=typeof window==='object';function getSize(){return{width:isClient?window.innerWidth:undefined,height:isClient?window.innerHeight:undefined};}// https://usehooks.com/useWindowSize/\nexport function useWindowSize(){var _useState=useState(getSize),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];useEffect(function(){function handleResize(){setWindowSize(getSize());}if(isClient){window.addEventListener('resize',handleResize);return function(){window.removeEventListener('resize',handleResize);};}return undefined;},[]);return windowSize;}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/hooks/useWindowSize.ts"],"names":["useEffect","useState","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useWindowSize","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"iLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,MAAOC,CAAAA,MAAP,GAAkB,QAAnC,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,MAAO,CACLC,KAAK,CAAEH,QAAQ,CAAGC,MAAM,CAACG,UAAV,CAAuBC,SADjC,CAELC,MAAM,CAAEN,QAAQ,CAAGC,MAAM,CAACM,WAAV,CAAwBF,SAFnC,CAAP,CAID,CAED;AACA,MAAO,SAASG,CAAAA,aAAT,EAAyB,eACMT,QAAQ,CAACG,OAAD,CADd,wCACvBO,UADuB,eACXC,aADW,eAG9BZ,SAAS,CAAC,UAAM,CACd,QAASa,CAAAA,YAAT,EAAwB,CACtBD,aAAa,CAACR,OAAO,EAAR,CAAb,CACD,CAED,GAAIF,QAAJ,CAAc,CACZC,MAAM,CAACW,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,WAAM,CACXV,MAAM,CAACY,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,EACD,CAFD,CAGD,CACD,MAAON,CAAAA,SAAP,CACD,CAZQ,CAYN,EAZM,CAAT,CAcA,MAAOI,CAAAA,UAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst isClient = typeof window === 'object'\r\n\r\nfunction getSize() {\r\n  return {\r\n    width: isClient ? window.innerWidth : undefined,\r\n    height: isClient ? window.innerHeight : undefined\r\n  }\r\n}\r\n\r\n// https://usehooks.com/useWindowSize/\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState(getSize)\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize(getSize())\r\n    }\r\n\r\n    if (isClient) {\r\n      window.addEventListener('resize', handleResize)\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize)\r\n      }\r\n    }\r\n    return undefined\r\n  }, [])\r\n\r\n  return windowSize\r\n}\r\n"]},"metadata":{},"sourceType":"module"}