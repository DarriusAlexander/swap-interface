{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  padding: 60px 0;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 24px;\\n  position: relative;\\n  background: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import Modal from'../Modal';import{AutoColumn,ColumnCenter}from'../Column';import styled from'styled-components';import{DataCard,CardSection,Break}from'../earn/styled';import{RowBetween}from'../Row';import{TYPE,ExternalLink,CloseIcon,CustomLightSpinner,UniTokenAnimated}from'../../theme';import{ButtonPrimary}from'../Button';import{useClaimCallback,useUserUnclaimedAmount,useUserHasAvailableClaim}from'../../state/claim/hooks';import tokenLogo from'../../assets/images/token-logo.png';import Circle from\"../../assets/images/blue-loader.svg\";import{Text}from'rebass';import AddressInputPanel from'../AddressInputPanel';import useENS from'../../hooks/useENS';import{useActiveWeb3React}from'../../hooks';import{isAddress}from'ethers/lib/utils';import Confetti from'../Confetti';import{CardNoise,CardBGImage,CardBGImageSmaller}from'../earn/styled';import{useIsTransactionPending}from'../../state/transactions/hooks';import{getEtherscanLink,shortenAddress}from'../../utils';var ContentWrapper=styled(AutoColumn)(_templateObject());var ModalUpper=styled(DataCard)(_templateObject2());var ConfirmOrLoadingWrapper=styled.div(_templateObject3(),function(_ref){var activeBG=_ref.activeBG;return activeBG&&'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;';});var ConfirmedIcon=styled(ColumnCenter)(_templateObject4());export default function AddressClaimModal(_ref2){var _groupSeparator,_groupSeparator2;var isOpen=_ref2.isOpen,onDismiss=_ref2.onDismiss;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;// state for smart contract input\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),typed=_useState2[0],setTyped=_useState2[1];function handleRecipientType(val){setTyped(val);}// monitor for third party recipient of claim\nvar _useENS=useENS(typed),parsedAddress=_useENS.address;// used for UI loading states\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attempting=_useState4[0],setAttempting=_useState4[1];// monitor the status of the claim from contracts and txns\nvar _useClaimCallback=useClaimCallback(parsedAddress),claimCallback=_useClaimCallback.claimCallback;var unclaimedAmount=useUserUnclaimedAmount(parsedAddress);// check if the user has something available\nvar hasAvailableClaim=useUserHasAvailableClaim(parsedAddress);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),hash=_useState6[0],setHash=_useState6[1];// monitor the status of the claim from contracts and txns\nvar claimPending=useIsTransactionPending(hash!==null&&hash!==void 0?hash:'');var claimConfirmed=hash&&!claimPending;// use the hash to monitor this txn\nfunction onClaim(){setAttempting(true);claimCallback().then(function(hash){setHash(hash);})// reset modal and log error\n.catch(function(error){setAttempting(false);console.log(error);});}function wrappedOnDismiss(){setAttempting(false);setHash(undefined);setTyped('');onDismiss();}return/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,onDismiss:wrappedOnDismiss,maxHeight:90},/*#__PURE__*/React.createElement(Confetti,{start:Boolean(isOpen&&claimConfirmed&&attempting)}),!attempting&&/*#__PURE__*/React.createElement(ContentWrapper,{gap:\"lg\"},/*#__PURE__*/React.createElement(ModalUpper,null,/*#__PURE__*/React.createElement(CardBGImage,null),/*#__PURE__*/React.createElement(CardNoise,null),/*#__PURE__*/React.createElement(CardSection,{gap:\"md\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(TYPE.white,{fontWeight:500},\"Claim UNI Token\"),/*#__PURE__*/React.createElement(CloseIcon,{onClick:wrappedOnDismiss,style:{zIndex:99},stroke:\"white\"})),/*#__PURE__*/React.createElement(TYPE.white,{fontWeight:700,fontSize:36},unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator={groupSeparator:','})!==null&&_groupSeparator!==void 0?_groupSeparator:'-'),\" UNI\")),/*#__PURE__*/React.createElement(Break,null)),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"md\",style:{padding:'1rem',paddingTop:'0'},justify:\"center\"},/*#__PURE__*/React.createElement(TYPE.subHeader,{fontWeight:500},\"Enter an address to trigger a UNI claim. If the address has any claimable UNI it will be sent to them on submission.\"),/*#__PURE__*/React.createElement(AddressInputPanel,{value:typed,onChange:handleRecipientType}),parsedAddress&&!hasAvailableClaim&&/*#__PURE__*/React.createElement(TYPE.error,{error:true},\"Address has no available claim\"),/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:!isAddress(parsedAddress!==null&&parsedAddress!==void 0?parsedAddress:'')||!hasAvailableClaim,padding:\"16px 16px\",width:\"100%\",borderRadius:\"12px\",mt:\"1rem\",onClick:onClaim},\"Claim UNI\"))),(attempting||claimConfirmed)&&/*#__PURE__*/React.createElement(ConfirmOrLoadingWrapper,{activeBG:true},/*#__PURE__*/React.createElement(CardNoise,null),/*#__PURE__*/React.createElement(CardBGImageSmaller,{desaturate:true}),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(CloseIcon,{onClick:wrappedOnDismiss,style:{zIndex:99},stroke:\"black\"})),/*#__PURE__*/React.createElement(ConfirmedIcon,null,!claimConfirmed?/*#__PURE__*/React.createElement(CustomLightSpinner,{src:Circle,alt:\"loader\",size:'90px'}):/*#__PURE__*/React.createElement(UniTokenAnimated,{width:\"72px\",src:tokenLogo})),/*#__PURE__*/React.createElement(AutoColumn,{gap:\"100px\",justify:'center'},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"12px\",justify:'center'},/*#__PURE__*/React.createElement(TYPE.largeHeader,{fontWeight:600,color:\"black\"},claimConfirmed?'Claimed':'Claiming'),!claimConfirmed&&/*#__PURE__*/React.createElement(Text,{fontSize:36,color:'#ff007a',fontWeight:800},unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator2={groupSeparator:','})!==null&&_groupSeparator2!==void 0?_groupSeparator2:'-'),\" UNI\"),parsedAddress&&/*#__PURE__*/React.createElement(TYPE.largeHeader,{fontWeight:600,color:\"black\"},\"for \",shortenAddress(parsedAddress))),claimConfirmed&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TYPE.subHeader,{fontWeight:500,color:\"black\"},/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"party-hat\"},\"\\uD83C\\uDF89\",' '),\"Welcome to team Unicorn :)\",' ',/*#__PURE__*/React.createElement(\"span\",{role:\"img\",\"aria-label\":\"party-hat\"},\"\\uD83C\\uDF89\"))),attempting&&!hash&&/*#__PURE__*/React.createElement(TYPE.subHeader,{color:\"black\"},\"Confirm this transaction in your wallet\"),attempting&&hash&&!claimConfirmed&&chainId&&hash&&/*#__PURE__*/React.createElement(ExternalLink,{href:getEtherscanLink(chainId,hash,'transaction'),style:{zIndex:99}},\"View transaction on Etherscan\"))));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/components/claim/AddressClaimModal.tsx"],"names":["React","useState","Modal","AutoColumn","ColumnCenter","styled","DataCard","CardSection","Break","RowBetween","TYPE","ExternalLink","CloseIcon","CustomLightSpinner","UniTokenAnimated","ButtonPrimary","useClaimCallback","useUserUnclaimedAmount","useUserHasAvailableClaim","tokenLogo","Text","AddressInputPanel","useENS","useActiveWeb3React","isAddress","Confetti","CardNoise","CardBGImage","CardBGImageSmaller","useIsTransactionPending","getEtherscanLink","shortenAddress","ContentWrapper","ModalUpper","ConfirmOrLoadingWrapper","div","activeBG","ConfirmedIcon","AddressClaimModal","isOpen","onDismiss","chainId","typed","setTyped","handleRecipientType","val","parsedAddress","address","attempting","setAttempting","claimCallback","unclaimedAmount","hasAvailableClaim","hash","setHash","claimPending","claimConfirmed","onClaim","then","catch","error","console","log","wrappedOnDismiss","undefined","Boolean","zIndex","toFixed","groupSeparator","padding","paddingTop","Circle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Modal from '../Modal'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\nimport styled from 'styled-components'\r\nimport { DataCard, CardSection, Break } from '../earn/styled'\r\nimport { RowBetween } from '../Row'\r\nimport { TYPE, ExternalLink, CloseIcon, CustomLightSpinner, UniTokenAnimated } from '../../theme'\r\nimport { ButtonPrimary } from '../Button'\r\nimport { useClaimCallback, useUserUnclaimedAmount, useUserHasAvailableClaim } from '../../state/claim/hooks'\r\nimport tokenLogo from '../../assets/images/token-logo.png'\r\nimport Circle from '../../assets/images/blue-loader.svg'\r\nimport { Text } from 'rebass'\r\nimport AddressInputPanel from '../AddressInputPanel'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { isAddress } from 'ethers/lib/utils'\r\nimport Confetti from '../Confetti'\r\nimport { CardNoise, CardBGImage, CardBGImageSmaller } from '../earn/styled'\r\nimport { useIsTransactionPending } from '../../state/transactions/hooks'\r\nimport { TokenAmount } from '@uniswap/sdk'\r\nimport { getEtherscanLink, shortenAddress } from '../../utils'\r\n\r\nconst ContentWrapper = styled(AutoColumn)`\r\n  width: 100%;\r\n`\r\n\r\nconst ModalUpper = styled(DataCard)`\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\r\n`\r\n\r\nconst ConfirmOrLoadingWrapper = styled.div<{ activeBG: boolean }>`\r\n  width: 100%;\r\n  padding: 24px;\r\n  position: relative;\r\n  background: ${({ activeBG }) =>\r\n    activeBG &&\r\n    'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;'};\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 60px 0;\r\n`\r\n\r\nexport default function AddressClaimModal({ isOpen, onDismiss }: { isOpen: boolean; onDismiss: () => void }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // state for smart contract input\r\n  const [typed, setTyped] = useState('')\r\n  function handleRecipientType(val: string) {\r\n    setTyped(val)\r\n  }\r\n\r\n  // monitor for third party recipient of claim\r\n  const { address: parsedAddress } = useENS(typed)\r\n\r\n  // used for UI loading states\r\n  const [attempting, setAttempting] = useState<boolean>(false)\r\n\r\n  // monitor the status of the claim from contracts and txns\r\n  const { claimCallback } = useClaimCallback(parsedAddress)\r\n  const unclaimedAmount: TokenAmount | undefined = useUserUnclaimedAmount(parsedAddress)\r\n\r\n  // check if the user has something available\r\n  const hasAvailableClaim = useUserHasAvailableClaim(parsedAddress)\r\n\r\n  const [hash, setHash] = useState<string | undefined>()\r\n\r\n  // monitor the status of the claim from contracts and txns\r\n  const claimPending = useIsTransactionPending(hash ?? '')\r\n  const claimConfirmed = hash && !claimPending\r\n\r\n  // use the hash to monitor this txn\r\n\r\n  function onClaim() {\r\n    setAttempting(true)\r\n    claimCallback()\r\n      .then(hash => {\r\n        setHash(hash)\r\n      })\r\n      // reset modal and log error\r\n      .catch(error => {\r\n        setAttempting(false)\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  function wrappedOnDismiss() {\r\n    setAttempting(false)\r\n    setHash(undefined)\r\n    setTyped('')\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\r\n      <Confetti start={Boolean(isOpen && claimConfirmed && attempting)} />\r\n      {!attempting && (\r\n        <ContentWrapper gap=\"lg\">\r\n          <ModalUpper>\r\n            <CardBGImage />\r\n            <CardNoise />\r\n            <CardSection gap=\"md\">\r\n              <RowBetween>\r\n                <TYPE.white fontWeight={500}>Claim UNI Token</TYPE.white>\r\n                <CloseIcon onClick={wrappedOnDismiss} style={{ zIndex: 99 }} stroke=\"white\" />\r\n              </RowBetween>\r\n              <TYPE.white fontWeight={700} fontSize={36}>\r\n                {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\r\n              </TYPE.white>\r\n            </CardSection>\r\n            <Break />\r\n          </ModalUpper>\r\n          <AutoColumn gap=\"md\" style={{ padding: '1rem', paddingTop: '0' }} justify=\"center\">\r\n            <TYPE.subHeader fontWeight={500}>\r\n              Enter an address to trigger a UNI claim. If the address has any claimable UNI it will be sent to them on\r\n              submission.\r\n            </TYPE.subHeader>\r\n            <AddressInputPanel value={typed} onChange={handleRecipientType} />\r\n            {parsedAddress && !hasAvailableClaim && (\r\n              <TYPE.error error={true}>Address has no available claim</TYPE.error>\r\n            )}\r\n            <ButtonPrimary\r\n              disabled={!isAddress(parsedAddress ?? '') || !hasAvailableClaim}\r\n              padding=\"16px 16px\"\r\n              width=\"100%\"\r\n              borderRadius=\"12px\"\r\n              mt=\"1rem\"\r\n              onClick={onClaim}\r\n            >\r\n              Claim UNI\r\n            </ButtonPrimary>\r\n          </AutoColumn>\r\n        </ContentWrapper>\r\n      )}\r\n      {(attempting || claimConfirmed) && (\r\n        <ConfirmOrLoadingWrapper activeBG={true}>\r\n          <CardNoise />\r\n          <CardBGImageSmaller desaturate />\r\n          <RowBetween>\r\n            <div />\r\n            <CloseIcon onClick={wrappedOnDismiss} style={{ zIndex: 99 }} stroke=\"black\" />\r\n          </RowBetween>\r\n          <ConfirmedIcon>\r\n            {!claimConfirmed ? (\r\n              <CustomLightSpinner src={Circle} alt=\"loader\" size={'90px'} />\r\n            ) : (\r\n              <UniTokenAnimated width=\"72px\" src={tokenLogo} />\r\n            )}\r\n          </ConfirmedIcon>\r\n          <AutoColumn gap=\"100px\" justify={'center'}>\r\n            <AutoColumn gap=\"12px\" justify={'center'}>\r\n              <TYPE.largeHeader fontWeight={600} color=\"black\">\r\n                {claimConfirmed ? 'Claimed' : 'Claiming'}\r\n              </TYPE.largeHeader>\r\n              {!claimConfirmed && (\r\n                <Text fontSize={36} color={'#ff007a'} fontWeight={800}>\r\n                  {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\r\n                </Text>\r\n              )}\r\n              {parsedAddress && (\r\n                <TYPE.largeHeader fontWeight={600} color=\"black\">\r\n                  for {shortenAddress(parsedAddress)}\r\n                </TYPE.largeHeader>\r\n              )}\r\n            </AutoColumn>\r\n            {claimConfirmed && (\r\n              <>\r\n                <TYPE.subHeader fontWeight={500} color=\"black\">\r\n                  <span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉{' '}\r\n                  </span>\r\n                  Welcome to team Unicorn :){' '}\r\n                  <span role=\"img\" aria-label=\"party-hat\">\r\n                    🎉\r\n                  </span>\r\n                </TYPE.subHeader>\r\n              </>\r\n            )}\r\n            {attempting && !hash && (\r\n              <TYPE.subHeader color=\"black\">Confirm this transaction in your wallet</TYPE.subHeader>\r\n            )}\r\n            {attempting && hash && !claimConfirmed && chainId && hash && (\r\n              <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')} style={{ zIndex: 99 }}>\r\n                View transaction on Etherscan\r\n              </ExternalLink>\r\n            )}\r\n          </AutoColumn>\r\n        </ConfirmOrLoadingWrapper>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}