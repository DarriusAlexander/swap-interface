{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\Darrius\\\\Documents\\\\GitHub\\\\swap-interface\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  font-size: 1rem;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.2rem;\\n  border: none;\\n  background: none;\\n  outline: none;\\n  cursor: default;\\n  border-radius: 36px;\\n  width: 24px;\\n  height: 24px;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  color: \",\";\\n\\n  :hover,\\n  :focus {\\n    opacity: 0.7;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 0.2rem;\\n  border: none;\\n  background: none;\\n  outline: none;\\n  cursor: default;\\n  border-radius: 36px;\\n  background-color: \",\";\\n  color: \",\";\\n\\n  :hover,\\n  :focus {\\n    opacity: 0.7;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useCallback,useState}from'react';import{HelpCircle as Question}from'react-feather';import styled from'styled-components';import Tooltip from'../Tooltip';var QuestionWrapper=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.bg2;},function(_ref2){var theme=_ref2.theme;return theme.text2;});var LightQuestionWrapper=styled.div(_templateObject2(),function(_ref3){var theme=_ref3.theme;return theme.white;});var QuestionMark=styled.span(_templateObject3());export default function QuestionHelper(_ref4){var text=_ref4.text;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var open=useCallback(function(){return setShow(true);},[setShow]);var close=useCallback(function(){return setShow(false);},[setShow]);return/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:4}},/*#__PURE__*/React.createElement(Tooltip,{text:text,show:show},/*#__PURE__*/React.createElement(QuestionWrapper,{onClick:open,onMouseEnter:open,onMouseLeave:close},/*#__PURE__*/React.createElement(Question,{size:16}))));}export function LightQuestionHelper(_ref5){var text=_ref5.text;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];var open=useCallback(function(){return setShow(true);},[setShow]);var close=useCallback(function(){return setShow(false);},[setShow]);return/*#__PURE__*/React.createElement(\"span\",{style:{marginLeft:4}},/*#__PURE__*/React.createElement(Tooltip,{text:text,show:show},/*#__PURE__*/React.createElement(LightQuestionWrapper,{onClick:open,onMouseEnter:open,onMouseLeave:close},/*#__PURE__*/React.createElement(QuestionMark,null,\"?\"))));}","map":{"version":3,"sources":["C:/Users/Darrius/Documents/GitHub/swap-interface/src/components/QuestionHelper/index.tsx"],"names":["React","useCallback","useState","HelpCircle","Question","styled","Tooltip","QuestionWrapper","div","theme","bg2","text2","LightQuestionWrapper","white","QuestionMark","span","QuestionHelper","text","show","setShow","open","close","marginLeft","LightQuestionHelper"],"mappings":"64CAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,OAASC,UAAU,GAAIC,CAAAA,QAAvB,KAAuC,eAAvC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CAEA,GAAMC,CAAAA,eAAe,CAAGF,MAAM,CAACG,GAAV,mBAUC,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,GAArB,EAVD,CAWV,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACE,KAArB,EAXU,CAArB,CAmBA,GAAMC,CAAAA,oBAAoB,CAAGP,MAAM,CAACG,GAAV,oBAaf,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,KAArB,EAbe,CAA1B,CAqBA,GAAMC,CAAAA,YAAY,CAAGT,MAAM,CAACU,IAAV,oBAAlB,CAIA,cAAe,SAASC,CAAAA,cAAT,OAAoD,IAA1BC,CAAAA,IAA0B,OAA1BA,IAA0B,eACzCf,QAAQ,CAAU,KAAV,CADiC,wCAC1DgB,IAD0D,eACpDC,OADoD,eAGjE,GAAMC,CAAAA,IAAI,CAAGnB,WAAW,CAAC,iBAAMkB,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAD,CAAsB,CAACA,OAAD,CAAtB,CAAxB,CACA,GAAME,CAAAA,KAAK,CAAGpB,WAAW,CAAC,iBAAMkB,CAAAA,OAAO,CAAC,KAAD,CAAb,EAAD,CAAuB,CAACA,OAAD,CAAvB,CAAzB,CAEA,mBACE,4BAAM,KAAK,CAAE,CAAEG,UAAU,CAAE,CAAd,CAAb,eACE,oBAAC,OAAD,EAAS,IAAI,CAAEL,IAAf,CAAqB,IAAI,CAAEC,IAA3B,eACE,oBAAC,eAAD,EAAiB,OAAO,CAAEE,IAA1B,CAAgC,YAAY,CAAEA,IAA9C,CAAoD,YAAY,CAAEC,KAAlE,eACE,oBAAC,QAAD,EAAU,IAAI,CAAE,EAAhB,EADF,CADF,CADF,CADF,CASD,CAED,MAAO,SAASE,CAAAA,mBAAT,OAAyD,IAA1BN,CAAAA,IAA0B,OAA1BA,IAA0B,gBACtCf,QAAQ,CAAU,KAAV,CAD8B,yCACvDgB,IADuD,eACjDC,OADiD,eAG9D,GAAMC,CAAAA,IAAI,CAAGnB,WAAW,CAAC,iBAAMkB,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAD,CAAsB,CAACA,OAAD,CAAtB,CAAxB,CACA,GAAME,CAAAA,KAAK,CAAGpB,WAAW,CAAC,iBAAMkB,CAAAA,OAAO,CAAC,KAAD,CAAb,EAAD,CAAuB,CAACA,OAAD,CAAvB,CAAzB,CAEA,mBACE,4BAAM,KAAK,CAAE,CAAEG,UAAU,CAAE,CAAd,CAAb,eACE,oBAAC,OAAD,EAAS,IAAI,CAAEL,IAAf,CAAqB,IAAI,CAAEC,IAA3B,eACE,oBAAC,oBAAD,EAAsB,OAAO,CAAEE,IAA/B,CAAqC,YAAY,CAAEA,IAAnD,CAAyD,YAAY,CAAEC,KAAvE,eACE,oBAAC,YAAD,UADF,CADF,CADF,CADF,CASD","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst LightQuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: ${({ theme }) => theme.white};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst QuestionMark = styled.span`\r\n  font-size: 1rem;\r\n`\r\n\r\nexport default function QuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport function LightQuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <LightQuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <QuestionMark>?</QuestionMark>\r\n        </LightQuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}